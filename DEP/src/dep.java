import java.awt.EventQueue; //подключение библиотеки EventQueue, которая ставит в очередь события 

import java.lang.Math; //подключение библиотеки Math, которая содержит методы для выполнения основных числовых операций

import javax.swing.JFrame; //подключение библиотеки JFrame - расширенная версия java.awt.Frame, которая добавляет поддержку архитектуры компонентов JFC / Swing

import javax.swing.JButton; //подключение библиотеки JButton - реализация кнопки «push»

import java.awt.event.ActionListener; //подключение библиотеки  ActionListener - интерфейс прослушивателя для приема событий действия

import java.awt.event.KeyAdapter; //подключение библиотеки KeyAdapter  - абстрактный класс адаптера для приема событий клавиатуры

import java.awt.event.KeyEvent; //подключение библиотеки KeyEvent  - событие, указывающее на то, что нажатие клавиши произошло в компоненте

import java.awt.event.ActionEvent; //подключение библиотеки ActionEvent - семантическое событие, которое указывает на то, что произошло действие, определяемое компонентом

import javax.swing.JTextField; //подключение библиотеки JTextField - легкий компонент, который позволяет редактировать одну строку текста

import javax.swing.JLabel; //подключение библиотеки JLabel - область отображения для короткой текстовой строки или изображения или того и другого

import javax.swing.JCheckBox; //подключение библиотеки JcheckBox - элемент, который может быть выбран или отменен, и который отображает его состояние для пользователя

import java.awt.Color; //подключение библиотеки Color, использующейся для инкапсуляции цветов в SRGB цветового пространства по умолчанию или цвета в произвольных цветовых пространствах , идентифицируемых ColorSpace

import java.awt.Font;  //подключение библиотеки Font, представляющая шрифты, которые используются для визуализации текста видимым образом

public class dep { //описание публичного класса  dep

	//объявление контейнера и основных элементов управления. Модификатор доступа 'private' означает, что они будут видимы только для класса dep
	private JFrame frame; // фрейм
	private JTextField summa; //текстовое поле для ввода суммы вклада
	private JTextField proc; //текстовое поле для ввода процентной ставки
	private JTextField sumVresult; //текстовое поле для вывода суммы вклада на конец срока
	private JTextField srok; //текстовое поле для ввода срока вложения
	private JLabel srokMetka; //метка срока вклада
	private JCheckBox chek; // флажок для расчета суммы вклада на конец срока без ежемесячной капитализации

	/*
	 *  Следующий метод отвечает за запуск программы.
     * invokeLater - приоритет; данное событие будет запущено позже других (В нашем случае - сразу, т.к. других нет).
     * Для создания нового потока реализовывается интерфейс Runnable.Для этого объявляется единственный метод run ().
     * Блок 'try' состоит из набора выполняемых утверждений, которые могут контролировать исключение. 
     * Любая ошибка, которая происходит в течение выполнения метода 'dep () ', перехватывается блоком 'catch ()'
     */
	public static void main(String[] args) { 
		//описание публичного класса main
		EventQueue.invokeLater(new Runnable() { 
			public void run() {  
				//далее код, который, составляет новый поток
				try { 
					dep window = new dep(); //cоздание экземпляра приложения
					window.frame.setVisible(true); //отображает окно
				} catch (Exception e) { //е - экземпляр класса 'Exception'
					e.printStackTrace(); //метод, определенный в классе Exception, используется, чтобы печатать информацию относительно исключения, то есть, как оно произошло и какой строке кода. 
				} 
			} 
		}); 
	}
//Создается приложение  
	public dep() { 
		initialize(); 
	}
//Инициализация содержимого фрейма.
	private void initialize() { 
		//Далее создается и настраивается фрейм
    
		frame = new JFrame(); 
		frame.setBounds(100, 100, 647, 410); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); //Действие при нажатии на "крест" (Кнопка "закрыть" в верхнем правом углу окна программы)
		frame.getContentPane().setLayout(null); //отключить систему Layout Manager
	
		//Далее создается и настраивается текстовое поле для ввода суммы вклада
		summa = new JTextField(); 
		summa.setFont(new Font("Tahoma", Font.PLAIN, 14)); //установка шрифта текста
		summa.setBounds(63, 104, 110, 20); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(summa); //добавление на фрейм
		summa.setColumns(10); //устанавливается число столбцов 
		
		summa.addKeyListener(new KeyAdapter() {//добавление слушателя на поле для ввода
			public void keyTyped(KeyEvent e) { //метод вызывается системой каждый раз, когда пользователь нажимает на клавиатуре клавиши символы Unicode.В качестве параметра передается объект KeyEvent, который содержит всю необходимую информацию о произошедшем событии
				char c = e.getKeyChar(); //переменной 'c' передается символ типа char, связанный с нажатой клавишей
				if ( ((c < '0') || (c > '9'))) { //если не цифры от 0 до 9 
					e.consume(); //событие расходуется , чтобы оно не обрабатывалось по умолчанию источником, который его инициировал. Таким образом достигается запрет на ввод недопустимых значений
				}
			}
		});
		
		//Далее создается и настраивается текстовое поле для ввода срока вложения
		proc = new JTextField(); 
		proc.setFont(new Font("Tahoma", Font.PLAIN, 14));//установка шрифта текста
		proc.setBounds(236, 104, 110, 20); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(proc); //добавление на фрейм
		proc.setColumns(10);//устанавливается число столбцов
		
		proc.addKeyListener(new KeyAdapter() {//добавление слушателя на поле для ввода 
			public void keyTyped(KeyEvent e) {//метод вызывается системой каждый раз, когда пользователь нажимает на клавиатуре клавиши символы Unicode.В качестве параметра передается объект KeyEvent, который содержит всю необходимую информацию о произошедшем событии
				char c = e.getKeyChar(); //переменной 'c' передается символ типа char, связанный с нажатой клавишей
				if ( ((c < '0') || (c > '9'))) {//если не цифры от 0 до 9 
					e.consume(); //событие расходуется , чтобы оно не обрабатывалось по умолчанию источником, который его инициировал. Таким образом достигается запрет на ввод недопустимых значений 
				}
			}
		});
		
		//Далее объявляется и инициализируется метка
		JLabel lblNewLabel = new JLabel(""); 
		lblNewLabel.setBounds(133, 123, 46, 14); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(lblNewLabel); //добавление на фрейм

		//Далее объявляется, создается и настраивается кнопка для расчета суммы вклада на конец срока, содержащая текст: "Вычислить"
		JButton btnNewButton = new JButton("\u0412\u044B\u0447\u0438\u0441\u043B\u0438\u0442\u044C"); 
		btnNewButton.setBackground(Color.ORANGE); //задается цвет фона компонента
		btnNewButton.setFont(new Font("Tahoma", Font.BOLD, 16));//установка шрифта текста
		btnNewButton.setForeground(Color.BLACK);//задается цвет текста
		
		btnNewButton.addActionListener(new ActionListener() { //добавление слушателя 
			public void actionPerformed(ActionEvent arg0) {//метод вызывается, когда выполнено некоторое действие
				double p = Integer.parseInt(proc.getText()); //в переменную передается значение из текстового поля 'proc'
				double a = Integer.parseInt(summa.getText()); //в переменную передается значение из текстового поля 'summa'
				int sr = Integer.parseInt(srok.getText()); //в переменную передается значение из текстового поля 'srok'
				
				if (chek.isSelected()==true){ //если флажок установлен
					double s=a+a*p/12/100*sr; //формула для вычисления без ежемесячной капитализации
					sumVresult.setText(String.valueOf(s)); //в текством поле 'sumVresult' устанавливается преобразованное в строку значение переменной s
				}
				else{ //в обратном случае
					double s1=a*Math.pow (1+sr*p/12/100,sr);//формула для вычисления с ежемесячной капитализацией
					sumVresult.setText(String.valueOf(s1)); //в текством поле 'sumVresult' устанавливается преобразованное в строку значение переменной s1
				};
			}
		}); 
		
		btnNewButton.setBounds(252, 235, 158, 37); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(btnNewButton);//добавление на фрейм
		
		//Далее создается и настраивается текстовое поле для вывода суммы вклада на конец срока
		sumVresult = new JTextField(); 
		sumVresult.setFont(new Font("Tahoma", Font.PLAIN, 14)); //установка шрифта текста
		sumVresult.setBounds(376, 299, 174, 22); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(sumVresult); //добавление на фрейм
		sumVresult.setColumns(10);//устанавливается число столбцов
		
		//Далее создается и настраивается текстовое поле для ввода срока вложения
		srok = new JTextField(); 
		srok.setFont(new Font("Tahoma", Font.PLAIN, 14));//установка шрифта текста
		srok.setBounds(432, 102, 110, 22); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(srok); //добавление на фрейм
		srok.setColumns(10); //устанавливается число столбцов
		
		srok.addKeyListener(new KeyAdapter() {//добавление слушателя на поле для ввода
			public void keyTyped(KeyEvent e) {//метод вызывается системой каждый раз, когда пользователь нажимает на клавиатуре клавиши символы Unicode.В качестве параметра передается объект KeyEvent, который содержит всю необходимую информацию о произошедшем событии
				char c = e.getKeyChar();//переменной 'c' передается символ типа char, связанный с нажатой клавишей
				if ( ((c < '0') || (c > '9'))) {//если не цифры от 0 до 9 
					e.consume(); //событие расходуется , чтобы оно не обрабатывалось по умолчанию источником, который его инициировал. Таким образом достигается запрет на ввод недопустимых значений  
				}
			}
		});
		
		//Далее объявдяется, создается и настраивается метка суммы вклада, содержащая текст: "Сумма вклада, руб"
		JLabel sumMetka = new JLabel("\u0421\u0443\u043C\u043C\u0430 \u0432\u043A\u043B\u0430\u0434\u0430, \u0440\u0443\u0431"); //в качестве аргумента передается текст, который будет показываться в JLabel
		sumMetka.setFont(new Font("Tahoma", Font.PLAIN, 14)); //установка шрифта текста 
		sumMetka.setBounds(44, 54, 149, 37); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(sumMetka); //добавление на фрейм
										   
		//Далее объявляется, создается и настраивается метка процентной ставки, содержащая текст: "Процентная ставка"
		JLabel procMetka = new JLabel("\u041F\u0440\u043E\u0446\u0435\u043D\u0442\u043D\u0430\u044F \u0441\u0442\u0430\u0432\u043A\u0430"); //в качестве аргумента передается текст, который будет показываться в JLabel
		procMetka.setFont(new Font("Tahoma", Font.PLAIN, 14));//установка шрифта текста 
		procMetka.setBounds(221, 54, 140, 37); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(procMetka); //добавление на фрейм

		//Далее создается и настраивается метка срока вложения, содержащая текст: "Срок вложения,мес"
		srokMetka = new JLabel("\u0421\u0440\u043E\u043A \u0432\u043B\u043E\u0436\u0435\u043D\u0438\u044F, \u043C\u0435\u0441"); //в качестве аргумента передается текст, который будет показываться в JLabel
		srokMetka.setFont(new Font("Tahoma", Font.PLAIN, 14));//установка шрифта текста
		srokMetka.setBounds(413, 55, 149, 36); //позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(srokMetka); //добавление на фрейм

		//Далее создается и настраивается флажок для указания расчета суммы вклада на конце срока без ежемесячной капитализации
		chek = new JCheckBox("\u0431\u0435\u0437 \u0435\u0436\u0435\u043C\u0435\u0441\u044F\u0447\u043D\u043E\u0439 \u043A\u0430\u043F\u0438\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0438"); //в качестве аргумента передается текст:"без ежемесячной капитализации"
		chek.setSelected(true); //флажок включен
		chek.setBounds(376, 178, 251, 25);//позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(chek);//добавление на фрейм

		//Далее создается и настраивается метка суммы на конце срока, содержащая текст: "Сумма на конец срока, руб"
		JLabel sumVresMetka = new JLabel("\u0421\u0443\u043C\u043C\u0430 \u043D\u0430 \u043A\u043E\u043D\u0435\u0446 \u0441\u0440\u043E\u043A\u0430");  //в качестве аргумента передается текст, который будет показываться в JLabel
		sumVresMetka.setFont(new Font("Tahoma", Font.PLAIN, 14));//установка шрифта текста
		sumVresMetka.setBounds(94, 295, 158, 30);//позиционирование компонента.Методу передаются четыре параметра, определяющих новое расположение и размеры компонента
		frame.getContentPane().add(sumVresMetka); //добавление на фрейм
	} 
}
